#pragma once

#include <SDL.h>


/*
	enum of all input context
	the order of the list defines the priority of the context where the top has the highes priority
*/
enum class InputContextType {
	MENU,
	BIRD,
	undefined
};

// mapping SDL keyboard scancodes to custom enumerator class
enum class KeyboardKey {
	NONE,

	// NUMERIC KEYS
	ZERO = SDL_SCANCODE_0,
	ONE = SDL_SCANCODE_1,
	TWO = SDL_SCANCODE_2,
	THREE = SDL_SCANCODE_3,
	FOUR = SDL_SCANCODE_4,
	FIVE = SDL_SCANCODE_5,
	SIX = SDL_SCANCODE_6,
	SEVEN = SDL_SCANCODE_7,
	EIGHT = SDL_SCANCODE_8,
	NINE = SDL_SCANCODE_9,

	// ALPHABETIC KEYS
	A = SDL_SCANCODE_A,
	B = SDL_SCANCODE_B,
	C = SDL_SCANCODE_C,
	D = SDL_SCANCODE_D,
	E = SDL_SCANCODE_E,
	F = SDL_SCANCODE_F,
	G = SDL_SCANCODE_G,
	H = SDL_SCANCODE_H,
	I = SDL_SCANCODE_I,
	J = SDL_SCANCODE_J,
	K = SDL_SCANCODE_K,
	L = SDL_SCANCODE_L,
	M = SDL_SCANCODE_M,
	N = SDL_SCANCODE_N,
	O = SDL_SCANCODE_O,
	P = SDL_SCANCODE_P,
	Q = SDL_SCANCODE_Q,
	R = SDL_SCANCODE_R,
	S = SDL_SCANCODE_S,
	T = SDL_SCANCODE_T,
	U = SDL_SCANCODE_U,
	V = SDL_SCANCODE_V,
	W = SDL_SCANCODE_W,
	X = SDL_SCANCODE_X,
	Y = SDL_SCANCODE_Y,
	Z = SDL_SCANCODE_Z,

	// ARROW KEYS
	UP = SDL_SCANCODE_UP,
	DOWN = SDL_SCANCODE_DOWN,
	LEFT = SDL_SCANCODE_LEFT,
	RIGHT = SDL_SCANCODE_RIGHT,

	// F KEYS
	F1 = SDL_SCANCODE_F1,
	F2 = SDL_SCANCODE_F2,
	F3 = SDL_SCANCODE_F3,
	F4 = SDL_SCANCODE_F4,
	F5 = SDL_SCANCODE_F5,
	F6 = SDL_SCANCODE_F6,
	F7 = SDL_SCANCODE_F7,
	F8 = SDL_SCANCODE_F8,
	F9 = SDL_SCANCODE_F9,
	F10 = SDL_SCANCODE_F10,
	F11 = SDL_SCANCODE_F11,
	F12 = SDL_SCANCODE_F12,

	// KEYPAD KEYS
	KPAD_1 = SDL_SCANCODE_KP_1,
	KPAD_2 = SDL_SCANCODE_KP_2,
	KPAD_3 = SDL_SCANCODE_KP_3,
	KPAD_4 = SDL_SCANCODE_KP_4,
	KPAD_5 = SDL_SCANCODE_KP_5,
	KPAD_6 = SDL_SCANCODE_KP_6,
	KPAD_7 = SDL_SCANCODE_KP_7,
	KPAD_8 = SDL_SCANCODE_KP_8,
	KPAD_9 = SDL_SCANCODE_KP_9,
	KPAD_COLON = SDL_SCANCODE_KP_COLON,
	KPAD_ENTER = SDL_SCANCODE_KP_ENTER,
	KPAD_PLUS = SDL_SCANCODE_KP_PLUS,
	KPAD_MINUS = SDL_SCANCODE_KP_MINUS,
	KPAD_MULTIPLY = SDL_SCANCODE_KP_MULTIPLY,
	KPAD_DIVIDE = SDL_SCANCODE_KP_DIVIDE,

	// MODIFIER KEYS
	ALT_LEFT = SDL_SCANCODE_LALT,
	ALT_RIGHT = SDL_SCANCODE_RALT,
	CTRL_LEFT = SDL_SCANCODE_LCTRL,
	CTRL_RIGHT = SDL_SCANCODE_RCTRL,
	SHIFT_LEFT = SDL_SCANCODE_LSHIFT,
	SHIFT_RIGHT = SDL_SCANCODE_RSHIFT,

	// MISC KEYS
	SPACE = SDL_SCANCODE_SPACE,
	SPACE2 = SDL_SCANCODE_KP_SPACE,
	BACKSLASH = SDL_SCANCODE_BACKSLASH,
	DELETE = SDL_SCANCODE_DELETE,
	END = SDL_SCANCODE_END,
	ESCAPE = SDL_SCANCODE_ESCAPE,
	HOME = SDL_SCANCODE_HOME,
	INSERT = SDL_SCANCODE_INSERT,
	PAGE_UP = SDL_SCANCODE_PAGEUP,
	PAGE_DOWN = SDL_SCANCODE_PAGEDOWN,
	PAUSE = SDL_SCANCODE_PAUSE,
	PRINT_SCREEN = SDL_SCANCODE_PRINTSCREEN,
	SEMICOLON = SDL_SCANCODE_SEMICOLON,
	SEPERATOR = SDL_SCANCODE_SEPARATOR,
	SEPERATOR_DECIMAL = SDL_SCANCODE_DECIMALSEPARATOR,


	// ENTER KEYS
	ENTER = SDL_SCANCODE_RETURN,
	ENTER2 = SDL_SCANCODE_RETURN2

};